{
  "openapi": "3.0.2",
  "info": {
    "contact": {
      "email": "not@vailable"
    },
    "description": "This API focuses on managing data archives and drones that submit data to them.",
    "license": {
      "name": "MIT",
      "url": "https://github.com/jdeyton/forge-keeper/blob/master/LICENSE"
    },
    "title": "Forge Keeper - Conductor",
    "version": "1.0.0"
  },
  "components": {
    "parameters": {
      "construct": {
        "name": "construct",
        "description": "The identifier of a construct for collecting data.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "index": {
        "name": "index",
        "description": "The identifier of a data index or archive.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "responses": {
      "AccessDenied": {
        "description": "Insufficient privileges. Access denied."
      },
      "InvalidRequest": {
        "description": "Request not understood."
      },
      "NotFound": {
        "description": "Requested entity not found."
      },
      "UnexpectedError": {
        "description": "Unexpected error encountered.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            }
          }
        }
      }
    },
    "schemas": {
      "Archive": {
        "description": "A collection of related data.",
        "type": "object",
        "properties": {
          "uuid": {
            "description": "A unique identifier for the archive.",
            "type": "string",
            "format": "uuid",
            "example": "7b9aed83-ed5a-47bf-a02a-8530369d545c",
            "readOnly": true,
            "nullable": false
          },
          "name": {
            "description": "A human readable name for the archive.",
            "type": "string",
            "example": "temperature",
            "readOnly": true,
            "nullable": false
          },
          "description": {
            "description": "A description of the archive.",
            "type": "string",
            "example": "An archive of historical temperature data.",
            "readOnly": true,
            "nullable": false
          },
          "dataType": {
            "description": "The type of data retained in the archive, e.g., integer or float.",
            "type": "string",
            "example": "float",
            "readOnly": true,
            "nullable": false
          },
          "units": {
            "description": "The units for the data retained in the archive.",
            "type": "string",
            "example": "C",
            "readOnly": true,
            "nullable": false
          },
          "creationTime": {
            "description": "The date the archive was created or initialized.",
            "type": "string",
            "format": "date-time",
            "example": "2020-07-25T17:32:28.000Z",
            "readOnly": true,
            "nullable": false
          }
        }
      },
      "ArchiveInputs": {
        "description": "Required inputs to create a new data archive.",
        "type": "object",
        "properties": {
          "name": {
            "description": "A human readable name for the archive.",
            "type": "string",
            "example": "temperature",
            "readOnly": true,
            "nullable": false
          },
          "description": {
            "description": "A description of the archive.",
            "type": "string",
            "example": "An archive of historical temperature data.",
            "readOnly": true,
            "nullable": false
          },
          "dataType": {
            "description": "The type of data retained in the archive, e.g., integer or float.",
            "type": "string",
            "example": "float",
            "readOnly": true,
            "nullable": false
          },
          "units": {
            "description": "The units for the data retained in the archive.",
            "type": "string",
            "example": "C",
            "readOnly": true,
            "nullable": false
          }
        }
      },
      "Drone": {
        "description": "An entity that collects data for one or more archives.",
        "type": "object",
        "properties": {
          "uuid": {
            "description": "A unique identifier for the drone.",
            "type": "string",
            "format": "uuid",
            "example": "8b9aed83-ed5a-47bf-a02a-8530369d545d",
            "readOnly": true,
            "nullable": false
          },
          "name": {
            "description": "A human readable name for the drone.",
            "type": "string",
            "example": "Server room",
            "readOnly": true,
            "nullable": false
          },
          "description": {
            "description": "A description of the drone.",
            "type": "string",
            "example": "Monitors temperature in the server room.",
            "readOnly": true,
            "nullable": false
          },
          "creationTime": {
            "description": "The date the drone was created or initialized.",
            "type": "string",
            "format": "date-time",
            "example": "2020-07-25T17:35:14.000Z",
            "readOnly": true,
            "nullable": false
          }
        }
      },
      "DroneInputs": {
        "description": "Required inputs to create a new data drone.",
        "type": "object",
        "properties": {
          "name": {
            "description": "A human readable name for the drone.",
            "type": "string",
            "example": "Server room",
            "readOnly": true,
            "nullable": false
          },
          "description": {
            "description": "A description of the drone.",
            "type": "string",
            "example": "Monitors temperature in the server room.",
            "readOnly": true,
            "nullable": false
          }
        }
      },
      "ErrorResponse": {
        "description": "A response returned for errors.",
        "type": "object",
        "properties": {
          "code": {
            "description": "An error code corresponding to some internal state of the server.",
            "type": "integer",
            "format": "int32",
            "example": 42,
            "readOnly": true,
            "nullable": false
          },
          "message": {
            "description": "A human-readable message explaining the error code or what went wrong.",
            "type": "string",
            "example": "Something went wrong when computing the ultimate answer.",
            "readOnly": true,
            "nullable": false
          }
        }
      },
      "Event": {
        "description": "A single data point associated with an archive.",
        "type": "object",
        "properties": {
          "archiveUUID": {
            "description": "A unique identifier for the archive in which this data is stored.",
            "type": "string",
            "format": "uuid",
            "example": "7b9aed83-ed5a-47bf-a02a-8530369d545c",
            "readOnly": true,
            "nullable": false
          },
          "droneUUID": {
            "description": "A unique identifier for the drone that observed this event.",
            "type": "string",
            "format": "uuid",
            "example": "8b9aed83-ed5a-47bf-a02a-8530369d545d",
            "readOnly": true,
            "nullable": false
          },
          "eventTime": {
            "description": "The time of the data measurement/collection.",
            "type": "string",
            "format": "date-time",
            "example": "2020-07-25T22:01:56.000Z",
            "readOnly": true,
            "nullable": false
          },
          "eventValue": {
            "description": "The archived data point collected by the drone at the event time.",
            "type": "string",
            "example": 83.5,
            "readOnly": true,
            "nullable": false
          }
        }
      }
    }
  },
  "paths": {
    "/archive": {
      "get": {
        "operationId": "getArchives",
        "summary": "Show all archives.",
        "description": "Get the list of data archives in the digital forge.",
        "responses": {
          "200": {
            "description": "List of archives successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Archive"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/InvalidRequest"
          },
          "403": {
            "$ref": "#/components/responses/AccessDenied"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        },
        "tags": [
          "conductor"
        ]
      },
      "put": {
        "operationId": "addArchive",
        "summary": "Add an archive.",
        "description": "Add a new data archive for the digital forge.",
        "requestBody": {
          "description": "Required inputs for creating a data archive.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ArchiveInputs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Archive successfully added.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Archive"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/InvalidRequest"
          },
          "403": {
            "$ref": "#/components/responses/AccessDenied"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        },
        "tags": [
          "conductor"
        ]
      }
    },
    "/archive/{archiveUUID}": {
      "parameters": [
        {
          "name": "archiveUUID",
          "description": "A unique identifier for a data archive.",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "get": {
        "operationId": "getArchive",
        "summary": "Get an archive's info.",
        "description": "Get info about a specific data archive.",
        "responses": {
          "200": {
            "description": "Archive info successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Archive"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/InvalidRequest"
          },
          "403": {
            "$ref": "#/components/responses/AccessDenied"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        },
        "tags": [
          "conductor"
        ]
      },
      "delete": {
        "operationId": "removeArchive",
        "summary": "Remove an archive.",
        "description": "Remove a data archive from the digital forge.",
        "responses": {
          "200": {
            "description": "Archive successfully removed."
          },
          "400": {
            "$ref": "#/components/responses/InvalidRequest"
          },
          "403": {
            "$ref": "#/components/responses/AccessDenied"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        },
        "tags": [
          "conductor"
        ]
      }
    },
    "/drone": {
      "get": {
        "operationId": "getDrones",
        "summary": "Show all drones.",
        "description": "Get the list of drones operating in the digital forge.",
        "responses": {
          "200": {
            "description": "Data index successfully initialized.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Drone"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/InvalidRequest"
          },
          "403": {
            "$ref": "#/components/responses/AccessDenied"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        },
        "tags": [
          "conductor"
        ]
      },
      "put": {
        "operationId": "addDrone",
        "summary": "Add a drone.",
        "description": "Add a new drone to the digital forge.",
        "requestBody": {
          "description": "Required inputs for creating a data drone.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DroneInputs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Drone successfully added.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/InvalidRequest"
          },
          "403": {
            "$ref": "#/components/responses/AccessDenied"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        },
        "tags": [
          "conductor"
        ]
      }
    },
    "/drone/{droneUUID}": {
      "parameters": [
        {
          "name": "droneUUID",
          "description": "A unique identifier for a data drone (collector).",
          "in": "path",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Drone"
          }
        }
      ],
      "get": {
        "operationId": "getDrone",
        "summary": "Get a drone's info.",
        "description": "Get info about a specific drone.",
        "responses": {
          "200": {
            "description": "Drone info successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Drone"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/InvalidRequest"
          },
          "403": {
            "$ref": "#/components/responses/AccessDenied"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        },
        "tags": [
          "conductor"
        ]
      },
      "delete": {
        "operationId": "removeDrone",
        "summary": "Remove a drone.",
        "description": "Remove a drone from the digital forge.",
        "responses": {
          "200": {
            "description": "Drone successfully removed."
          },
          "400": {
            "$ref": "#/components/responses/InvalidRequest"
          },
          "403": {
            "$ref": "#/components/responses/AccessDenied"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        },
        "tags": [
          "conductor"
        ]
      }
    },
    "/event": {
      "put": {
        "operationId": "addEvent",
        "summary": "Add a data event.",
        "description": "Report a new data event to be retained in the archives.",
        "requestBody": {
          "description": "Required inputs for creating a data archive.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Event"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Event data successfully reported."
          },
          "400": {
            "$ref": "#/components/responses/InvalidRequest"
          },
          "403": {
            "$ref": "#/components/responses/AccessDenied"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        },
        "tags": [
          "drone"
        ]
      }
    }
  },
  "servers": [
    {
      "url": "http://localhost:65001"
    }
  ],
  "tags": [
    {
      "name": "drone",
      "description": "Drones collect data."
    },
    {
      "name": "conductor",
      "description": "Conductors manage archives and drones."
    }
  ]
}